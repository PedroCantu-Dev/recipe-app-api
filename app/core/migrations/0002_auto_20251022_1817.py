# Generated by Django 3.2.25 on 2025-10-22 18:17

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllTypeFields',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, help_text='Título del registro', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('url', models.URLField()),
                ('code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Código debe ser en formato XX-000000', regex='^[A-Z]{2}$')])),
                ('integer_num', models.IntegerField(default=0)),
                ('big_number', models.BigIntegerField()),
                ('decimal_num', models.DecimalField(decimal_places=2, max_digits=10)),
                ('float_num', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('positive_num', models.PositiveIntegerField()),
                ('small_num', models.SmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('only_date', models.DateField()),
                ('only_time', models.TimeField()),
                ('duration', models.DurationField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_optional', models.BooleanField(blank=True, null=True)),
                ('binary_data', models.BinaryField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('file_path', models.FilePathField(blank=True, null=True, path='/path/to/files')),
                ('ip_address', models.GenericIPAddressField(unpack_ipv4=True)),
                ('json_data', models.JSONField(default=dict)),
                ('array_field', models.JSONField(blank=True, default=list, null=True)),
                ('mac_address', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message='Debe ser una dirección MAC válida', regex='^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$')])),
                ('status', models.CharField(choices=[('AC', 'Active'), ('IN', 'Inactive'), ('PE', 'Pending')], default='AC', max_length=2)),
                ('search_vector', models.CharField(db_index=True, max_length=255)),
                ('hash_field', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'all_type_fields',
            },
        ),
        migrations.AddIndex(
            model_name='alltypefields',
            index=models.Index(fields=['title', 'status'], name='all_type_fi_title_8ee1b3_idx'),
        ),
        migrations.AddIndex(
            model_name='alltypefields',
            index=models.Index(fields=['created_at'], name='all_type_fi_created_ee6179_idx'),
        ),
        migrations.AddConstraint(
            model_name='alltypefields',
            constraint=models.CheckConstraint(check=models.Q(('positive_num__gte', 0)), name='positive_num_non_negative'),
        ),
    ]
